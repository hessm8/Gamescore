@using Microsoft.AspNetCore.Html
@model GameProfileViewModel
@{
    ViewData["Title"] = $"{Model.Game.Name}";

    Func<dynamic, object> RatingStar = @<img
        class="icon icon-star @item.pressed" 
        src="/images/icons/star.png" 
        star-index="@item.index" 
        game-alias="@Model.Game.Alias"
        onclick="location.href='@Url.Action("RateGame", "games", new {
            alias = @Model.Game.Alias, rating = @item.index + 1
        })'"
    />
    ;

    int GetRating()
    {
        if (Model.Rating == null) return 0;

        return (int)Model.Rating.RatingGameplay;
    }
}

<div id="entity">
    <div id="main-tab" class="d-flex flex-row justify-content-left">
        <a href="~/game/@Model.Game.Alias/match">
            <img class="entity-image big" src="@($"/data/games/{Model.Game.Alias}/image.png")" />
        </a>

        <div id="info">
            <div class="entity-text">
                <h2><a href="~/game/@Model.Game.Alias">@Model.Game.Name</a> (@Model.Game.NameLocalized)</h2>
                <p class="title-secondary big">@Model.Game.ReleaseDate</p>
            
            </div>

            <div class="icon-set d-flex flex-column">

                <div class="game-icon flex-row">
                    <img class="icon" src="/images/icons/chess.png" title="Players" />
                    <div><b>Players:</b> @Model.Game.PlayersMin - @Model.Game.PlayersMax</div>
                </div>
                <div class="game-icon flex-row">
                    <img class="icon" src="/images/icons/user-restrict.png" title="Min. age" />
                    <div><b>Min. age:</b> @Model.Game.AgeMin+</div>
                </div>
                <div class="game-icon flex-row">
                    <img class="icon" src="/images/icons/time.png" title="Game duration" />
                    <div><b>Time:</b> @Model.Game.DurationMin - @Model.Game.DurationMax</div>
                </div>

            </div> 


            <div class="action-buttons">
                <input type="button" class="btn btn-primary" value="@(!Model.InCollection ? "Favorite" : "Unfavorite")" 
                    onclick="location.href='@Url.Action("AddToCollection", "games",
                    new { alias = Model.Game.Alias })'" 
                />
                <input type="button" class="btn btn-primary" value="Edit" 
                    onclick="location.href='@Url.Action("manage", "games",
                    new { alias = Model.Game.Alias })'" 
                />
                <input type="button" class="btn btn-primary" value="Log play" 
                    onclick="location.href='@Url.Action("match", "games",
                    new { alias = Model.Game.Alias })'" 
                />
            </div>

            <div class="rating-section d-flex flex-row">
                <p>My rating</p>
                <div class="rating">
                    @for (int i = 0; i < 10; i++)
                    {
                        @RatingStar(new { 
                            index = i,
                            pressed = i < GetRating() ? "is-pressed" : ""
                        });
                    }
                </div>
            </div>

            
            <div class="rating-section d-flex flex-row">
                @if (@Model.SiteRating != null) {
                    <p>Average rating:</p>
                    <span>@Model.SiteRating</span>
                } else
                {
                    <span>Be the first to rate this game!</span>
                }
            </div>

        </div>     
    </div>    
    
    <div>
        <h4>Description</h4>
        <p class="entity-description">@Model.Game.Description</p>
        @if (string.IsNullOrEmpty(@Model.Game.Description))
        {
            <p class="title-secondary">Add description using 'Edit'</p>
        }
    </div>

    <hr />

    @if (Model.LoggedPlays != null) {
        <h4>Last played</h4>
        <div>        
            @foreach (var play in Model.LoggedPlays)
            {
                <p>@play.Game.Name - @play.Date</p>
            }
        </div>    
    }
</div>

@section Scripts
{
 <script>

     $( ".icon-star" ).hover(
        function() {

            let game = $( this ).attr( "game-alias" );
            let curIndex = $( this ).attr( "star-index" );

            $( ".icon-star[game-alias='".concat(game, "']") ).each(function( index ) {
                if (index <= curIndex) {
                    $(this).addClass('is-active');
                }
            });

        }, 
        function() {

            $( ".icon-star" ).each(function( index ) {
                $(this).removeClass('is-active');
            });

        }
    );

 </script>
} 
