@model MatchViewModel
@{
    ViewData["Title"] = "Add match | Gamescore";
}


<div id="app">
    @using (Html.BeginForm("Match", "Games", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="card" style="width:40%">

            <div class="card-header">
                Add match for game ({{gameAlias}})
            </div>

            <div class="card-body">
                
                <h3>@Html.DisplayTextFor(model => model.Game.Name)</h3>    
                @Html.HiddenFor(model => model.Game)

                @*<img class="game-image" src="@($"/data/games/{Model.Game.Alias}/image.png")" />*@

                <div class="d-flex flex-row p-3">

                    <div class="me-5">
                        <div class="form-group">  
                            @Html.LabelFor(model => model.Match.Date, new { @class = "control-label" })  

                            @Html.EditorFor(model => model.Match.Date, new { htmlAttributes = new { @class = "form-control" } })  
                            @Html.ValidationMessageFor(model => model.Match.Date, "", new { @class = "text-danger" })  

                        </div>  

                        <div class="form-group">  
                            @Html.LabelFor(model => model.Match.Place, new { @class = "control-label" })  

                            @Html.EditorFor(model => model.Match.Place, new { htmlAttributes = new { @class = "form-control" } })  
                            @Html.ValidationMessageFor(model => model.Match.Place, "", new { @class = "text-danger" })  

                        </div>  

                        <div class="form-group">  
                            @Html.LabelFor(model => model.Match.Duration, new { @class = "control-label" })  
                            <div class="col-md-10">  
                                @Html.EditorFor(model => model.Match.Duration, new { htmlAttributes = new { @class = "form-control" } })  
                                @Html.ValidationMessageFor(model => model.Match.Duration, "", new { @class = "text-danger" })  
                            </div>  
                        </div>  

                        <div class="form-group">  
                            @Html.LabelFor(model => model.Match.Comment, new { @class = "control-label" })  
                            <div class="col-md-10">  
                                @Html.TextAreaFor(model => model.Match.Comment, new { htmlAttributes = new { @class = "form-control" } })  
                                @Html.ValidationMessageFor(model => model.Match.Comment, "", new { @class = "text-danger" })  
                            </div>  
                        </div>  
                    </div>

                    <div>
                        <h3>Players</h3>

                        <div v-for="player in players">
                            <p><b>{{player.username}}</b>: -{{player.team}} -{{player.points}} -{{player.isWinner}}</p>
                        </div>

                        @foreach (var player in Model.Match.Players)
                        {
                            <p>player.Player.Alias</p>
                        }

                        <button class="btn" type="button" v-on:click="test">+</button>
                    </div>

                </div>

                <div class="form-group">
                    <input class="btn btn-primary" type="submit" value="Submit" />
                </div>

            </div>

        </div>

    }
</div>

<script>
    let app = new Vue({
        el: '#app',
        data: {
            gameAlias: '@Model.Game.Alias',
            players: [
                { 
                    username: 'TheJack', 
                    team: 'Red',
                    points: 9,
                    isWinner: true
                },
                {
                    username: 'Spongebob123',
                    team: 'Blue',
                    points: 5,
                    isWinner: false
                }
            ]
        },
        methods: {
            test: function (event) {

                alert('Clicked a button')
 
            }
        }
    })
</script>

